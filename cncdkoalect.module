<?php

function cncdkoalect_menu() {
  $items = [];

  $items['cncdkoalect'] = [
    'title'            => 'CNCD Koalect',
    'page callback'    => 'cncdkoalect_process',
    'access arguments' => ['access content'],
    'description' => t('CNCD KOALECT'),
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

function cncdkoalect_process() {
  if (current_path() == 'cncdkoalect') {
    header('Content-Type: application/json');
    $data = cncdkoalect_getBlankReturnObject();

    try {
      $action = $_GET['action'];
      $body = cncdkoalect_getRequestBody();
      $expectedToken = cncdkoalect_getExpectedToken();

      $data->stocks = CncdKoalectAction::execute($action, $body, $expectedToken);
    }
    catch (Exception $e) {
      $data->status = $e->getCode();
      $data->status_message = $e->getMessage();
    }

    echo json_encode($data);
    drupal_exit();
  }
}

function cncdkoalect_getBlankReturnObject() {
  $o = new stdClass();

  $o->status = 200;
  $o->status_message = '';
  $o->stocks = [];

  return $o;
}

function cncdkoalect_getExpectedToken() {
  $koalectToken = variable_get('koalect_api_token');
  if (!$koalectToken) {
    throw new Exception('Error: koalect_api_token is not defined on the server', 500);
  }

  return $koalectToken;
}

function cncdkoalect_getRequestBody() {
  $rawBody = file_get_contents("php://input");
  if (!$rawBody) {
    $rawBody = '{}';
  }

  $body = json_decode($rawBody);

  switch (json_last_error()) {
    case JSON_ERROR_NONE:
      // OK
      break;
    case JSON_ERROR_DEPTH:
      throw new Exception('Error: could not decode request body - Maximum stack depth exceeded',400);
      break;
    case JSON_ERROR_STATE_MISMATCH:
      throw new Exception('Error: could not decode request body - Underflow or the modes mismatch',400);
      break;
    case JSON_ERROR_CTRL_CHAR:
      throw new Exception('Error: could not decode request body - Unexpected control character found',400);
      break;
    case JSON_ERROR_SYNTAX:
      throw new Exception('Error: could not decode request body - Syntax error, malformed JSON',400);
      break;
    case JSON_ERROR_UTF8:
      throw new Exception('Error: could not decode request body - Malformed UTF-8 characters, possibly incorrectly encoded',400);
      break;
    default:
      throw new Exception('Error: could not decode request body - Unknown error',400);
      break;
  }

  return $body;
}
